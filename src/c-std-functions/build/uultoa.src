	section	.text
	assume	adl = 1
	section	.text
	public	__u_ultoa
__u_ultoa:
	ld	hl, -20
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix + -16), hl
	ld	a, (ix + 9)
	ld	(ix + -17), a
	ld	a, 65
	ld	(ix + -20), a
	ld	a, (___print_fmt+4)
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	ld	bc, 88
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	z, BB0_5
	ld	bc, 120
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	z, BB0_4
	ld	bc, 112
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_24
BB0_4:
	ld	a, (___print_fmt+1)
	and	a, 32
	xor	a, 97
	ld	(ix + -20), a
BB0_5:
	ld	e, 16
BB0_6:
	ld	iy, ___print_buff
	ld	a, (ix + -20)
	add	a, -10
	ld	(ix + -19), a
	ld	hl, (ix + -16)
	ld	d, (ix + -17)
	ld	(ix + -18), e
BB0_7:
	ld	(ix + -3), iy
	push	hl
	pop	iy
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	c, e
	xor	a, a
	lea	hl, iy + 0
	ld	e, d
	call	__ldivu
	ld	(ix + -6), hl
	ld	(ix + -7), e
	ld	(ix + -10), bc
	call	__lmulu
	push	hl
	pop	bc
	ld	a, e
	ld	(ix + -13), iy
	lea	hl, iy + 0
	ld	e, d
	call	__lsub
	push	hl
	pop	iy
	ld	bc, 10
	or	a, a
	sbc	hl, bc
	ld	a, (ix + -19)
	jq	nc, BB0_9
	ld	a, 48
BB0_9:
	add	a, iyl
	ld	iy, (ix + -3)
	ld	(iy), a
	ld	hl, (ix + -13)
	ld	e, d
	ld	bc, (ix + -10)
	xor	a, a
	call	__lcmpu
	ld	a, 1
	jq	nc, BB0_11
	ld	a, 0
BB0_11:
	inc	iy
	bit	0, a
	ld	hl, (ix + -6)
	ld	d, (ix + -7)
	ld	e, (ix + -18)
	jq	nz, BB0_7
	ld	c, e
BB0_13:
	lea	hl, iy + 0
	ld	de, ___print_buff
	or	a, a
	sbc	hl, de
	ld	a, (___print_fmt+6)
	ld	de, 0
	ld	e, a
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB0_15
	ld	(iy), 48
	inc	iy
	jq	BB0_13
BB0_15:
	ld	hl, (ix + -16)
	ld	e, (ix + -17)
	call	__lcmpzero
	jq	z, BB0_17
	ld	l, 0
	jq	BB0_18
BB0_17:
	ld	l, 1
BB0_18:
	ld	a, (___print_fmt+1)
	ld	e, a
	bit	0, l
	jq	nz, BB0_31
	bit	3, e
	jq	z, BB0_31
	ld	a, c
	cp	a, 8
	jq	nz, BB0_26
	ld	(iy), 48
	inc	iy
	jq	BB0_31
BB0_24:
	ld	bc, 111
	ex	de, hl
	or	a, a
	sbc	hl, bc
	jq	z, BB0_28
	ld	a, 0
	jq	BB0_29
BB0_26:
	cp	a, 16
	jq	nz, BB0_31
	ld	a, (ix + -20)
	add	a, 23
	ld	(iy), a
	lea	hl, iy + 2
	ld	(iy + 1), 48
	jq	BB0_32
BB0_31:
	lea	hl, iy + 0
BB0_32:
	ld	a, (___print_fmt+6)
	or	a, a
	jq	z, BB0_34
	ld	a, e
	and	a, -65
	ld	(___print_fmt+1), a
BB0_34:
	ld	(hl), 0
	ld	hl, ___print_buff
	push	hl
	call	__u_reverse
	pop	hl
	ld	hl, ___print_buff
	ld	(ix + 6), hl
	ld	sp, ix
	pop	ix
	jq	___print_sendstring
BB0_28:
	ld	a, 1
BB0_29:
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB0_35
	ld	e, 8
	jq	BB0_6
BB0_35:
	ld	e, 10
	jq	BB0_6
	section	.text

	extern	__ldivu
	extern	__setflag
	extern	___print_buff
	extern	__frameset
	extern	__lcmpu
	extern	_llvm.stackprotector
	extern	__lcmpzero
	extern	__lmulu
	extern	__u_reverse
	extern	___print_fmt
	extern	__lsub
	extern	___print_sendstring
